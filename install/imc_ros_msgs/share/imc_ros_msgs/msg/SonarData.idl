// generated from rosidl_adapter/resource/msg.idl.em
// with input from imc_ros_msgs/msg/SonarData.msg
// generated code does not contain a copyright notice


module imc_ros_msgs {
  module msg {
    module SonarData_Constants {
      @verbatim (language="comment", text=
        "Sidescan.")
      const uint8 ST_SIDESCAN = 0;
      @verbatim (language="comment", text=
        "Echo Sounder.")
      const uint8 ST_ECHOSOUNDER = 1;
      @verbatim (language="comment", text=
        "Multibeam.")
      const uint8 ST_MULTIBEAM = 2;
    };
    @verbatim (language="comment", text=
      "IMC SonarData message in ROS form.")
    struct SonarData {
      @verbatim (language="comment", text=
        "Type.")
      uint8 type;

      @verbatim (language="comment", text=
        "Frequency.")
      uint32 frequency;

      @verbatim (language="comment", text=
        "Minimum Range.")
      uint16 min_range;

      @verbatim (language="comment", text=
        "Maximum Range.")
      uint16 max_range;

      @verbatim (language="comment", text=
        "Bits Per Data Point.")
      uint8 bits_per_point;

      @verbatim (language="comment", text=
        "Scaling Factor.")
      float scale_factor;

      @verbatim (language="comment", text=
        "TODO add beamconfig" "\n"
        "Data. first half of vector is left side, other half is right side of side scan")
      sequence<uint8> data;
    };
  };
};
